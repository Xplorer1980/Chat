ChatGPT 4o Memoria piena Condividi 

vorrei partendo da un video youtube estrarre i sottotitoli e creare 
un voice over in modo automatico mantendnedo il timing nel 
modo più preciso possibile c'è modo di farlo in modo rapido e 

gratutamente? 

Sì, puoi farlo gratuitamente utilizzando una combinazione di strumenti. Ti guiderò passo passo su come 

estrarre i sottotitoli da un video di YouTube e convertirli in un voice-over mantenendo il timing. 

1. Estrarre i sottotitoli dal video YouTube 
Se il video ha già i sottotitoli, puoi scaricarli direttamente in formato .srt o .vtt : 

Opzione 1: Usare YouTube direttamente 

Se i sottotitoli sono disponibili, puoi scaricarli manualmente da YouTube Studio (se il video è tuo). 

In alternativa, attiva i sottotitoli automatici su YouTube, clicca sui tre puntini accanto e seleziona 

"Apri la trascrizione" . Da qui, puoi copiare e salvare i sottotitoli. 

Opzione 2: Usare uno strumento online 

Alcuni siti permettono di scaricare direttamente i sottotitoli di un video YouTube: 

DownSub 

SaveSubs 

Basta incollare il link del video e scaricare il file .srt o .vtt . 

Opzione 3: Estrarre sottotitoli con YouTube-DL (metodo avanzato) 

Se hai familiarità con la riga di comando, puoi usare yt-dlp : 

bash Copia Modifica 

yt-dlp --write-auto-sub --sub-lang en --skip-download "URL_DEL_VIDEO" 

Questo scaricherà i sottotitoli automatici in formato .vtt . 

2. Convertire i sottotitoli in testo leggibile 
Se hai scaricato un file .srt o .vtt , puoi convertirlo in testo semplice con un editor di testo o un tool 

online come: 

Subtitle Edit (Windows) 

SRT to Text (online) 

3. Creare un Voice-Over con il timing corretto 
Ora che hai il testo, devi convertirlo in audio con il timing originale. 

Opzione 1: Usare Whisper + TTS gratuito 

Puoi usare Whisper di OpenAI per sincronizzare automaticamente il testo e poi usare Voxygen, 

Balabolka o Google TTS per generare la voce. 

Scarica Whisper: 

Se hai Python installato, puoi farlo così: 

bash Copia Modifica 

pip install openai-whisper 

Poi esegui: 

bash Copia Modifica 

whisper "video.mp4" --model small 

Questo estrarrà l’audio e i sottotitoli in un formato utilizzabile. 

Usare Google TTS con SSML per mantenere il timing Puoi usare Google Cloud Text-to-Speech 

con il file .srt per mantenere le pause. Se vuoi una soluzione gratuita, usa TTS su Python : 

python Copia Modifica 

from gtts import gTTS 

tts = gTTS(text= "Il tuo testo qui" , lang= "it" ) 

tts.save( "output.mp3" ) 

Puoi poi usare FFmpeg per allineare il file audio ai sottotitoli. 

Opzione 2: Usare Coqui TTS 

Coqui TTS è un progetto open-source che ti permette di generare voce con maggiore controllo: 

bash Copia Modifica 

pip install TTS 

tts --text "Ciao, come stai?" --model_name tts_models/it/mai_female 

Puoi creare file audio per ogni segmento dei sottotitoli e poi unirli. 

4. Unire il voice-over con il video 
Ora hai il file audio, devi solo sostituire l’audio originale: 

bash Copia Modifica 

ffmpeg -i video.mp4 -i output.mp3 -c:v copy -map 0:v:0 -map 1:a:0 -shortest video_con_audio.mp4 

Se vuoi mantenere il volume originale e mixarlo con la voce sintetica: 

bash Copia Modifica 

ffmpeg -i video.mp4 -i output.mp3 -filter_complex "[0:a][1:a]amix=inputs=2:duration=first" -c:v 

Conclusione 
Scarichi i sottotitoli con DownSub o yt-dlp 

Converti il testo in un formato leggibile 

Generi l’audio con gTTS , Whisper o Coqui TTS 

Sincronizzi il voice-over con il video usando FFmpeg 

Vuoi una soluzione ancora più automatizzata o hai bisogno di aiuto con un passaggio specifico? 

Questa conversazione ti è sembrata utile finora?